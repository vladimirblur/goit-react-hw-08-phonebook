{"version":3,"sources":["components/FormTitle/FormTitle.js","components/Section/Section.js","components/SubmitFormButton/SubmitFormButton.js","components/Copyright/Copyright.js","components/EmailInputField/EmailInputField.js","components/PasswordInputField/PasswordInputField.js","components/NameInputField/NameInputField.js","pages/SignUpView/SignUpView.js"],"names":["FormTitle","title","Icon","icon","Avatar","sx","m","bgcolor","Typography","component","variant","Section","children","options","Box","pt","pb","SubmitFormButton","Button","type","fullWidth","mt","mb","Copyright","color","align","Link","HomeLink","to","process","Date","getFullYear","EmailInputField","autoFocus","error","TextField","required","id","label","name","autoComplete","inputProps","inputMode","pattern","Boolean","PasswordInputField","NameInputField","SignUpView","dispatch","useDispatch","useSelector","authSelectors","getError","Container","maxWidth","display","flexDirection","alignItems","LockedIcon","onSubmit","event","preventDefault","form","currentTarget","data","FormData","credentials","get","email","password","authOperations","signUp","Grid","container","spacing","item","xs","justifyContent","RouterLink"],"mappings":"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","file":"static/js/sign-up-page.114223ac.chunk.js","sourcesContent":["import { Avatar, Typography } from \"@mui/material\";\r\n\r\nexport default function FormTitle({ title, icon: Icon }) {\r\n  return (\r\n    <>\r\n      {Icon && (\r\n        <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\r\n          <Icon />\r\n        </Avatar>\r\n      )}\r\n      <Typography component=\"h1\" variant=\"h5\">\r\n        {title}\r\n      </Typography>\r\n    </>\r\n  );\r\n}\r\n","import { Box } from \"@mui/system\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default function Section({ children, ...options }) {\r\n  return (\r\n    <Box\r\n      component=\"section\"\r\n      sx={{\r\n        pt: 8,\r\n        pb: 4,\r\n      }}\r\n      {...options}\r\n    >\r\n      {children}\r\n    </Box>\r\n  );\r\n}\r\n","import { Button } from \"@mui/material\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function SubmitFormButton({ children }) {\r\n  return (\r\n    <Button type=\"submit\" fullWidth variant=\"contained\" sx={{ mt: 3, mb: 2 }}>\r\n      {children}\r\n    </Button>\r\n  );\r\n}\r\n\r\nSubmitFormButton.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","import { Link, Typography } from \"@mui/material\";\r\nimport { Link as HomeLink } from \"react-router-dom\";\r\n\r\nexport default function Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" component={HomeLink} to={process.env.PUBLIC_URL}>\r\n        Phonebook\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n","import { TextField } from \"@mui/material\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function EmailInputField({ autoFocus = false, error }) {\r\n  return (\r\n    <TextField\r\n      autoFocus={autoFocus}\r\n      required\r\n      fullWidth\r\n      id=\"email\"\r\n      label=\"Email Address\"\r\n      name=\"email\"\r\n      autoComplete=\"email\"\r\n      inputProps={{\r\n        inputMode: \"email\",\r\n        pattern: \"[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$\",\r\n        title: \"Email is not valid.\",\r\n      }}\r\n      error={Boolean(error)}\r\n    />\r\n  );\r\n}\r\n\r\nEmailInputField.propTypes = {\r\n  autoFocus: PropTypes.bool,\r\n  error: PropTypes.string,\r\n};\r\n","import { TextField } from \"@mui/material\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function PasswordInputField({ error }) {\r\n  return (\r\n    <TextField\r\n      required\r\n      fullWidth\r\n      name=\"password\"\r\n      label=\"Password\"\r\n      type=\"password\"\r\n      id=\"password\"\r\n      autoComplete=\"new-password\"\r\n      inputProps={{\r\n        inputMode: \"text\",\r\n        pattern: \"(?=^.{6,}$).*$\",\r\n        title: \"Minimum 6 numbers required and one lowercase characters .\",\r\n      }}\r\n      error={Boolean(error)}\r\n    />\r\n  );\r\n}\r\n\r\nPasswordInputField.propTypes = {\r\n  error: PropTypes.string,\r\n};\r\n","import { TextField } from \"@mui/material\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function NameInputField({ autoFocus = false }) {\r\n  return (\r\n    <TextField\r\n      autoComplete=\"given-name\"\r\n      name=\"name\"\r\n      required\r\n      fullWidth\r\n      id=\"input-name\"\r\n      label=\"Name\"\r\n      autoFocus={autoFocus}\r\n      inputProps={{\r\n        inputMode: \"text\",\r\n        pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\r\n        title: \"Name may contain only letters, apostrophe, dash and spaces.\",\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nNameInputField.propTypes = {\r\n  autoFocus: PropTypes.bool,\r\n};\r\n","import * as React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { authOperations, authSelectors } from \"redux/auth\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Link from \"@mui/material/Link\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport LockedIcon from \"@mui/icons-material/DoDisturbOnOutlined\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Copyright from \"components/Copyright\";\r\nimport EmailInputField from \"components/EmailInputField\";\r\nimport NameInputField from \"components/NameInputField\";\r\nimport PasswordInputField from \"components/PasswordInputField\";\r\nimport FormTitle from \"components/FormTitle\";\r\nimport SubmitFormButton from \"components/SubmitFormButton\";\r\nimport Section from \"components/Section\";\r\n\r\nexport default function SignUpView() {\r\n  const dispatch = useDispatch();\r\n  const error = useSelector(authSelectors.getError);\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const form = event.currentTarget;\r\n    const data = new FormData(form);\r\n    const credentials = {\r\n      name: data.get(\"name\"),\r\n      email: data.get(\"email\"),\r\n      password: data.get(\"password\"),\r\n    };\r\n\r\n    dispatch(authOperations.signUp(credentials));\r\n  };\r\n\r\n  return (\r\n    <Section>\r\n      <Container maxWidth=\"xs\">\r\n        <Box\r\n          sx={{\r\n            mb: 5,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <FormTitle icon={LockedIcon} title={\"Sign up\"} />\r\n\r\n          <Box component=\"form\" onSubmit={onSubmit} sx={{ mt: 3 }}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <NameInputField autoFocus />\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <EmailInputField error={error} />\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <PasswordInputField error={error} />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <SubmitFormButton>Sign Up</SubmitFormButton>\r\n\r\n            <Grid container justifyContent=\"flex-end\">\r\n              <Grid item>\r\n                <Link component={RouterLink} variant=\"body2\" to=\"/login\">\r\n                  Already have an account? Sign in\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n\r\n        <Copyright />\r\n      </Container>\r\n    </Section>\r\n  );\r\n}\r\n"],"sourceRoot":""}